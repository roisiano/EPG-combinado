name: EPG Workflow

on:
  schedule:
    - cron: '57 8 * * *'  # Ejecuta a las 08:57 UTC cada dÃ­a
  workflow_dispatch:  # Permite ejecutar manualmente el flujo de trabajo

jobs:
  epg:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests lxml

      - name: Download EPG and process
        run: |
          # Crear directorio de trabajo
          mkdir -p /tmp/epg

          # Descargar archivo XML
          curl -L -o /tmp/epg/epg.xml.gz https://github.com/davidmuma/EPG_dobleM/raw/master/guiatv_color.xml.gz

          # Descomprimir el archivo
          gunzip -f /tmp/epg/epg.xml.gz

          # Copiar el script Python desde el repositorio al directorio de trabajo
          cp .github/workflows/process_epg.py /tmp/epg/process_epg.py

          # Ejecutar el script de procesamiento de EPG
          python3 /tmp/epg/process_epg.py

      - name: Upload EPGcompleto.xml to GitHub
        env:
          GITHUB_TOKEN: ${{ secrets.TKN1 }}  # Usa el secreto para autenticar con la API
        run: |
          FILE_PATH="/tmp/epg/EPGcompleto.xml"
          REPO="roisiano/EPG-combinado"
          FILE_NAME="EPGcompleto.xml"
          BRANCH="main"

          # Comprobar si el archivo ya existe en la rama principal
          curl -s -H "Authorization: token $GITHUB_TOKEN" \
            "https://api.github.com/repos/$REPO/contents/$FILE_NAME?ref=$BRANCH" \
            | jq -e '.sha' > /dev/null 2>&1

          if [ $? -eq 0 ]; then
            # El archivo existe, hacer un commit para actualizarlo
            SHA=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
              "https://api.github.com/repos/$REPO/contents/$FILE_NAME?ref=$BRANCH" \
              | jq -r '.sha')

            # Subir el archivo con el mismo nombre
            curl -s -X PUT -H "Authorization: token $GITHUB_TOKEN" \
              -H "Content-Type: application/vnd.github.v3+json" \
              -d @- \
              "https://api.github.com/repos/$REPO/contents/$FILE_NAME" <<EOF
{
  "message": "Actualizar archivo $FILE_NAME",
  "content": "$(base64 -w 0 $FILE_PATH)",
  "sha": "$SHA",
  "branch": "$BRANCH"
}
EOF
          else
            # El archivo no existe, crear uno nuevo
            curl -s -X PUT -H "Authorization: token $GITHUB_TOKEN" \
              -H "Content-Type: application/vnd.github.v3+json" \
              -d @- \
              "https://api.github.com/repos/$REPO/contents/$FILE_NAME" <<EOF
{
  "message": "Crear archivo $FILE_NAME",
  "content": "$(base64 -w 0 $FILE_PATH)",
  "branch": "$BRANCH"
}
EOF
          fi
