name: EPG Workflow

on:
  schedule:
    - cron: '0 7 * * *'  # Ejecuta a las 07:00 UTC cada d√≠a
  workflow_dispatch:  # Permite ejecutar manualmente el flujo de trabajo

jobs:
  epg:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests lxml

      - name: Download EPG and process
        run: |
          # Crear directorio de trabajo
          mkdir -p /tmp/epg

          # Descargar archivo XML
          curl -L -o /tmp/epg/epg.xml.gz https://github.com/davidmuma/EPG_dobleM/raw/master/guiatv_color.xml.gz

          # Descomprimir el archivo
          gunzip -f /tmp/epg/epg.xml.gz

          # Copiar el script Python desde el repositorio al directorio de trabajo
          cp .github/workflows/process_epg.py /tmp/epg/process_epg.py

          # Ejecutar el script de procesamiento de EPG
          python3 /tmp/epg/process_epg.py

      - name: Create release and upload artifact
        env:
          GITHUB_TOKEN: ${{ secrets.TKN1 }}  # Usa el secreto para autenticar con la API
        run: |
          REPO_OWNER="roisiano"
          REPO_NAME="EPG-combinado"
          TAG_NAME="v$(date +'%Y%m%d%H%M%S')"
          RELEASE_NAME="EPG Release $(date +'%d-%m-%Y %H:%M:%S')"
          COMBINED_FILE="/tmp/epg/EPGcombinado.xml"

          # Crear una nueva release
          RESPONSE=$(curl -s -X POST -H "Authorization: token $GITHUB_TOKEN" \
            -d "{\"tag_name\":\"$TAG_NAME\",\"name\":\"$RELEASE_NAME\"}" \
            "https://api.github.com/repos/$REPO_OWNER/$REPO_NAME/releases")

          # Extraer el ID de la release creada
          RELEASE_ID=$(echo "$RESPONSE" | jq -r '.id')

          # Subir el archivo como un asset de la release
          curl -s -X POST -H "Authorization: token $GITHUB_TOKEN" \
            -H "Content-Type: application/octet-stream" \
            --data-binary @"$COMBINED_FILE" \
            "https://uploads.github.com/repos/$REPO_OWNER/$REPO_NAME/releases/$RELEASE_ID/assets?name=EPGcombinado.xml"

